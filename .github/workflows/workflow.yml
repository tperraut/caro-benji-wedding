name: Build and Deploy to Terapoint

on:
  workflow_dispatch:
  push:
    branches:
      - master

env:
  TERAPOINT_SECRET: ${{ secrets.TERAPOINT_SECRET }}
  IMAGE_NAME: "registry.terapoint.fr/caro-benji-wedding:latest"

jobs:
  tag:
    name: create tag
    runs-on: ubuntu-latest
    permissions:
      contents: write # Needed to push tag
    outputs:
      tag: ${{ steps.tag_version.outputs.new_tag }}
      version: ${{ steps.tag_version.outputs.new_version }}
      changelog: ${{ steps.tag_version.outputs.changelog }}

    steps:
      - name: checkout repo
        uses: actions/checkout@v4

      - name: bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.2
        with:
          github_token: ${{ github.token }}

      - run: echo ${{ github.ref }} ${{ steps.tag_version.outputs.new_tag }}

  build-upload-docker-image:
    name: build & upload docker img
    runs-on: ubuntu-latest
    needs: [ tag ]
    permissions:
     contents: 'read'
     id-token: 'write'

    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: login
        run: docker login -u tperraut -p ${{ env.TERAPOINT_SECRET }} https://registry.terapoint.fr/

      - name: build image
        run: |-
          docker build \
            --tag "${{ env.IMAGE_NAME }}" \
            --file Dockerfile \
            .

      - name: publish image
        run: |-
          docker push "${{ env.IMAGE_NAME }}"

  release:
    name: make github release
    runs-on: ubuntu-latest
    permissions:
      contents: write # Needed to push tag
    needs: [ tag, build-upload-docker-image ]
    steps:
      - name: make release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.tag.outputs.tag }}
          prerelease: ${{ github.ref == 'refs/heads/qa' }}
          body: ${{ needs.tag.outputs.changelog }}

  clean:
    name: clean
    needs: [ tag, build-upload-docker-image, release ]
    permissions:
      contents: write # Needed to push tag
    runs-on: ubuntu-latest
    if: always() && (contains(needs.*.result, 'failure') || contains(needs.*.result, 'cancelled'))
    steps:
      - name: clean
        env:
          GITHUB_TOKEN: ${{ github.token }}
        uses: dev-drprasad/delete-tag-and-release@v1.1
        with:
          tag_name: ${{ needs.tag.outputs.tag }}